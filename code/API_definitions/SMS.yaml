openapi: 3.0.3
info:
  title: SMS API
  description: |
    The API provides the customer with the ability to send SMS to the destination address(es). 
    There are 3 different categories of SMS i.e. Service, Promotional & Transactional. 
    This API is used to send all categories of messages. 
    Pre-requisite for using this API is that SMS Sender application / enterprise (or customer) needs to onboard itself with the access provider before using this API. 
    This API has only single operation i.e. Send SMS - Provides the capability to deliver SMS to the recepient. 
    In order to the receive delivery receipt separate API to be defined which is to be implemented by the API consumer for sending back the delivery receipt to the 'Send SMS' API consumer in a standardized callback API. 
  version: 0.1.0
  termsOfService: http://example.com/terms/
  contact:
    name: API Support
    url: http://www.example.com/support
    email: support@example.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: '{apiRoot}/sms/v0'
    variables:
      apiRoot:
        default: http://localhost:9091
        description: API root
tags:
  - name: Short Message
    description: API operation to send SMS
paths:
  /text SMS Send:
    post:
      tags:
        - Send text SMS
      summary: Send text SMS
      description: |
        The customer application server makes a request to the SMS API to send SMS message to the destination address of the communication module.
      operationId: sms-text
      parameters:
        - in: header
          name: X-Correlator
          required: false
          description: Correlation id for the different services
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sendTextSMSMessage'
            example:
              sendTextSMSMessage:
                smsNumber: 'tel:0123456789'
                userContact: 'tel:9876543210'
                smsBody: Hello Open Gateway
        required: true
      responses:
        '200':
          description: OK
          headers:
            X-Correlator:
              description: Correlation id for the different services
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sendResponse'
        '400':
          $ref: '#/components/responses/Generic400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '404':
          $ref: '#/components/responses/Generic404'
        '500':
          $ref: '#/components/responses/Generic500'
        '503':
          $ref: '#/components/responses/Generic503'
      security:
        - openId:
          - sms
  /Binary SMS Send:
    post:
      tags:
        - Send binary SMS
      summary: Send binary SMS
      description: |
        The customer application server makes a request to the SMS API to send SMS message to the destination address of the communication module.
      operationId: sms-binary
      parameters:
        - in: header
          name: X-Correlator
          required: false
          description: Correlation id for the different services
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sendBinarySMSMessage'
            example:
              sendBinarySMSMessage:
                smsNumber: 'tel:0123456789'
                userContact: 'tel:9876543210'
                smsBody: BgUEkZkAAAA5ADIANAAw
        required: true
      responses:
        '200':
          description: OK
          headers:
            X-Correlator:
              description: Correlation id for the different services
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sendResponse'
        '400':
          $ref: '#/components/responses/Generic400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '404':
          $ref: '#/components/responses/Generic404'
        '500':
          $ref: '#/components/responses/Generic500'
        '503':
          $ref: '#/components/responses/Generic503'
      security:
        - openId:
          - sms
components:
  securitySchemes:
    openId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
  schemas:
    sendTextSMSMessage:
      type: object
      required:
        - smsNumber
        - userContact
        - smsBody
      properties:
        smsnumber:
          type: array
          description: "The recipients MSISDN"
          items:
            type: string
        userContact:
          type: string
          description: "The senders MSISDN"
        smsBody:
          type: string
          description: "Regular text string"
    sendBinarySMSMessage:
      type: object
      required:
        - smsNumber
        - userContact
        - smsBody
      properties:
        smsnumber:
          type: array
          description: "The recipients MSISDN"
          items:
            type: string
        userContact:
          type: string
          description: "The senders MSISDN"
        smsBody:
          type: string
          description: "Base64 coded string"
    sendResponse:
      type: object
      required:
        - msgId
        - status
        - timestamp
      properties:
        msgId:
          type: string
          description: "The SMS messages sent to the recipients are identified by smsnumber are identified."
        status:
          type: string
          example: Success
          description: "Delivery status for the recipient identified by smsnumber."
        timestamp:
          type: string
          format: date-time
          description: Timestamp when SMS was delivered. It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone. Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)
    responseErrorMessage:
      type: object
      required:
        - status
        - code
        - detail
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: Code given to this error
        detail:
          type: string
          description: Detailed error description
  responses:
    Generic400:
      description: Problem with the client request
      headers:
        X-Correlator:
          description: Correlation id for the different services
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseErrorMessage'
          example:
            status: 400
            code: INVALID_ARGUMENT
            detail: Client specified an invalid argument, request body or query param
    Generic401:
      description: Authentication problem with the client request
      headers:
        X-Correlator:
          description: Correlation id for the different services
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseErrorMessage'
          example:
            status: 401
            code: UNAUTHENTICATED
            detail: Request not authenticated due to missing, invalid, or expired credentials
    Generic403:
      description: Client does not have sufficient permission
      headers:
        X-Correlator:
          description: Correlation id for the different services
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseErrorMessage'
          examples:
            PermissionDenied:
              value:
                status: 403
                code: PERMISSION_DENIED
                detail: Client does not have sufficient permissions to perform this action
            InvalidTokenContext:
              value:
                status: 403
                code: INVALID_TOKEN_CONTEXT
                detail: Phone number cannot be deducted from access token context
    Generic404:
      description: Resource Not Found
      headers:
        X-Correlator:
          description: Correlation id for the different services
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseErrorMessage'
          example:
            status: 404
            code: NOT_FOUND
            detail: A specified resource is not found
    Generic500:
      description: Server error
      headers:
        X-Correlator:
          description: Correlation id for the different services
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseErrorMessage'
          example:
            status: 500
            code: INTERNAL
            detail: Server error
    Generic503:
      description: Service unavailable. Typically the server is down.
      headers:
        X-Correlator:
          description: Correlation id for the different services
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseErrorMessage'
          example:
            status: 503
            code: UNAVAILABLE
            detail: Service unavailable
externalDocs:
  description: Project documentation at CAMARA
  url: https://github.com/camaraproject/NumberVerification
